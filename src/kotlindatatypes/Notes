-------------------------------------------------------------------------
Data types are divided into different groups:
--------------------------------------------------------------------------

        -Numbers

        -Booleans

        -Characters

        -Strings

        -Arrays
---------------------------------------------------------------------------
1. Numbers
---------------------------------------------------------------------------

Number types are divided into two groups:

    i. Integer types
    -----------------
    Integer types store whole numbers, positive or negative (such as 123 or -456), without decimals.
    Valid types are Byte, Short, Int and Long.

    ii. Floating point types
    ---------------------
    Floating point types represent numbers with a fractional part, containing one or more decimals.
    There are two types: Float and Double.

    If you don't specify the type for a numeric variable, it is most often returned as

    Int for whole numbers and

    Double for floating point numbers.
    ------------------------------------------------------------------------------
    Integer Types
    ------------------------------------------------------------------------------
        1. Byte
        ---------------------------------------------------------------------------
        The Byte data type can store whole numbers from -128 to 127.

        This can be used instead of Int or other integer types to save memory when you are
        certain that the value will be within -128 and 127(1 byte or 8 bits):

        val myNum: Byte = 100
        println(myNum)

        2. Short
        ---------------------------------------------------------------------------
        The Short data type can store whole numbers from -32768 to 32767 (2bytes or 16 bits):

        val myNum: Short = 5000
        println(myNum)

        3. Int
        ---------------------------------------------------------------------------
        The Int data type can store whole numbers from -2147483648 to 214748364 (4 bytes):

        val myNum: Int = 100000
        println(myNum)

        4. Long
        ---------------------------------------------------------------------------
        The Long data type can store whole numbers from -9223372036854775807 to 9223372036854775807  (8 bytes).

        This is used when Int is not large enough to store the value.

        Optionally, you can end the value with an "L":

        val myNum: Long = 15000000000L
        println(myNum)

        Difference Between Int and Long
        ------------------------------------------------------
        A whole number is an Int as long as it is up to 2147483647.

        If it goes beyond that, it is defined as Long:


        val myNum1 = 2147483647  // Int
        val myNum2 = 2147483648  // Long



    2. Floating Point Types
    ---------------------------------------
    Floating point types represent numbers with a decimal, such as 9.99 or 3.14515.

    The Float and Double data types can store fractional numbers:


        val myNum: Float = 5.75F
        println(myNum)

        Double Example
        val myNum: Double = 19.99

        println(myNum)
        Use Float or Double?

        The precision of a floating point value indicates how many digits the value can have after
        the decimal point.

        The precision of Float is only six or seven decimal digits

        Double variables have a precision of about 15 digits.

        Therefore it is safer to use Double for most calculations.

        Also note that you should end the value of a Float type with an "F".

        Scientific Numbers
        -------------------------------------------
        A floating point number can also be a scientific number with an "e" or "E" to indicate the power of 10:


        val myNum1: Float = 35E3F
        val myNum2: Double = 12E4

----------------------------------------------------------------
2. Booleans
----------------------------------------------------------------
    The Boolean data type and can only take the values true or false:

    val isKotlinFun: Boolean = true
    val isFishTasty: Boolean = false

    Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.
----------------------------------------------------------------
3. Characters
----------------------------------------------------------------
        The Char data type is used to store a single character.

        A char value must be surrounded by single quotes, like 'A' or 'c':


        val myGrade: Char = 'B'

        Unlike Java, you cannot use ASCII values to display certain characters.

        The value 66 would output a "B" in Java, but will generate an error in Kotlin:

       -------------------------------
        val myLetter: Char = 66
        println(myLetter) // Error
        ------------------------------
----------------------------------------------------
4. Strings
----------------------------------------------------
     The String data type is used to store a sequence of characters (text).

     String values must be surrounded by double quotes:

        val myText: String = "Hello World"


-----------------------------------------------------
5. Arrays
-----------------------------------------------------
    Arrays are used to store multiple values in a single variable,

    instead of declaring separate variables for each value.

